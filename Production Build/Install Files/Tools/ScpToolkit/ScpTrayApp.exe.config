<?xml version="1.0" encoding="utf-8"?>

<configuration>
  <configSections>
    <section name="log4net"
             type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>
  <log4net>
    <!-- This is a sample appender to use in the *client* - copy and paste and modify to taste -->
    <appender name="remotingAppender"
              type="log4net.Appender.RemotingAppender">
      <!-- The remoting URL to the remoting server object -->
      <sink value="tcp://localhost:8085/Log4netRemotingServerService" />
      <!-- Send all events, do not discard events when the buffer is full -->
      <lossy value="false" />
      <!-- The number of events to buffer before sending -->
      <bufferSize value="10" />
      <!-- Do not store event data that is slow to generate -->
      <onlyFixPartialEventData value="true" />
      <!-- Specify an evaluator to send the events immediately under certain conditions, e.g. when an error event ocurrs -->
      <evaluator type="log4net.Core.LevelEvaluator">
        <threshold value="WARN" />
      </evaluator>
    </appender>

    <!-- Try the logview4net utility to listen to UDP-logs, download from sourceforge.net -->
    <appender name="udpLogAppender"
              type="log4net.Appender.UdpAppender">
      <!-- Typical encoding values are Unicode/utf-16 or utf-8 or ascii. See System.Text.Encoding for more info. Omit this tag to get the system default Ansi -->
      <!-- Use utf-16 since it's default for logvivew4net -->
      <encoding value="utf-16" />
      <!-- Be careful where you send the logs, they may contain sensitive data. You can use 224.0.0.1 for the local net -->
      <remoteAddress value="127.0.0.1" />
      <remotePort value="8082" />
      <layout type="log4net.Layout.PatternLayout">
        <!-- You should be aware that generating type and method information is very SLOW, and you *cant* do it when logging via remote. -->
        <conversionPattern
          value="%date %-7level [%-3thread] (%-10property{log4net:HostName}) - %message (%logger) %exception %n" />
      </layout>
    </appender>

    <root>
      <!-- This serves as an additional 'global' filter - the client has already decided what to log... -->
      <level value="DEBUG" />
      <!--<appender-ref ref="udpLogAppender" />-->
    </root>
  </log4net>

  <system.runtime.remoting>
    <application name="Log4netRemotingServerService">
      <!-- We need to define the remoting channels on which we will publish
           the remote logging sink. -->
      <channels>
        <channel displayName="Log4net Remoting Server Channel"
                 ref="tcp server"
                 bindTo="127.0.0.1"
                 port="8085" />
      </channels>
    </application>
  </system.runtime.remoting>

  <appSettings>
    <!-- Set to true to enable log4net internal debugging. -->
    <add key="log4net.Internal.Debug"
         value="false" />
  </appSettings>

  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.1" />
  </startup>
</configuration>